#!/bin/sh
set -o nounset
set -o pipefail
RRH_VER="source"
RRH_BIN="."
RRH_VAR="$HOME/.cache/rrh-dev/var"
RRH_ETC="$HOME/.cache/rrh-dev/etc"

if [ "$(id -un)" != "root" ]; then
    "$RRH_BIN/rrh-doas" "root" "$0" "$@"
    exit $?
fi
    
if [ ! -f "$RRH_ETC/cmd/update" ]; then
    echo "$RRH_ETC/cmd/update not exists!" >&2
    exit 1
fi

CONFIG_USER="root"
if [ -f "$RRH_ETC/user" ]; then
    CONFIG_USER="$(cat $RRH_ETC/user)"
    if [ ! $? -eq 0 ]; then
        echo "read user config failed!" >&2
        exit 2
    fi
fi

ACTION_ID=$(date -u +'%Y%m%d%H%M%S')
if [ ! $? -eq 0 ]; then
    echo "generate action id failed!" >&2
    exit 3
fi
CMD_OUTPUT_FILE="$RRH_VAR/action/$ACTION_ID/cmd_output"
EXIT_CODE_FILE="$RRH_VAR/action/$ACTION_ID/exit_code"

exec 200>/run/rrh.lck
flock -nxE 1 200
if [ ! $? -eq 0 ]; then
    echo "get lock failed!" >&2
    exit 5
fi

if [ -f "$RRH_ETC/cmd/pre_update" ]; then
    $RRH_ETC/cmd/pre_update
    PRE_UPDATE_CODE=$?
    if [ ! $PRE_UPDATE_CODE -eq 0 ]; then
        echo "pre_update cmd failed(code $PRE_UPDATE_CODE)!"
        exec 200>&-
        rm /run/rrh.lck
        exit 14
    fi
fi

mkdir -p "$RRH_VAR/action/${ACTION_ID}"
if [ ! $? -eq 0 ]; then
    echo "create action dir failed!" >&2
    exec 200>&-
    rm /run/rrh.lck
    exit 4
fi


"$RRH_BIN/rrh-doas" "$CONFIG_USER" script -qc "$RRH_ETC/cmd/update $@" /dev/null 2>&1 | tee "$CMD_OUTPUT_FILE"
UPDATE_EXIT_CODE=$?
echo "$UPDATE_EXIT_CODE" >"$EXIT_CODE_FILE"

if [ -t 0 ]; then
    IFS=';' read -sdR -p $'\E[6n' ROW COL # Get cursor position
    [ $COL -ne 1 ] && echo '' # Add newline if cursor is not at 1st column
fi

# write update time even if update fail
echo "$(date -u +'%s')" >"$RRH_VAR/last_time"
if [ ! $? -eq 0 ]; then
    echo "write last update time failed!" >&2
    exec 200>&-
    rm /run/rrh.lck
    exit 7
fi
echo "$ACTION_ID" >"$RRH_VAR/last"
if [ ! $? -eq 0 ]; then
    echo "write last update action id failed!" >&2
    exec 200>&-
    rm /run/rrh.lck
    exit 7
fi

if [ ! $UPDATE_EXIT_CODE -eq 0 ]; then
    echo "update cmd failed(code $UPDATE_EXIT_CODE)!" >&2
    exec 200>&-
    rm /run/rrh.lck
    exit 6
fi

if [ -f "$RRH_ETC/cmd/post_update" ]; then
    "$RRH_ETC/cmd/post_update"
    POST_UPDATE_CODE=$?
    if [ ! $POST_UPDATE_CODE -eq 0 ]; then
        echo "post_update cmd failed(code $POST_UPDATE_CODE)!"
        exec 200>&-
        rm /run/rrh.lck
        exit 14
    fi
fi

if [ -f "$RRH_ETC/auto_digest" ]; then
    "$RRH_BIN/rrh-cat-output" | "$RRH_BIN/rrh-output-digest"
    DIGEST_CODE=$?
    if [ ! $DIGEST_CODE -eq 0 ] && [ ! $DIGEST_CODE -eq 1 ]; then
        echo "rrh-output-digest failed(code $DIGEST_CODE)!"
        exec 200>&-
        rm /run/rrh.lck
        exit 16
    fi
fi

if [ ! -f "$RRH_ETC/cmd/no_auto_remove" ]; then
    "$RRH_BIN/rrh-auto-remove"
    AUTO_REMOVE_CODE=$?
    if [ ! $AUTO_REMOVE_CODE -eq 0 ]; then
        echo "rrh-auto-remove failed(code $AUTO_REMOVE_CODE)!"
        exec 200>&-
        rm /run/rrh.lck
        exit 17
    fi
fi

exec 200>&-
rm /run/rrh.lck

