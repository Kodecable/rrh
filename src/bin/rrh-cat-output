#!/bin/sh
set -o nounset
set -o pipefail
RRH_VER="source"
RRH_BIN="."
RRH_VAR="$HOME/.cache/rrh-dev/var"
RRH_ETC="$HOME/.cache/rrh-dev/etc"
ESC=$(printf '\033')
CTRL_M=$(printf '\015')
CTRL_G=$(printf '\07')

help() {
    echo "Usage: rrh-cat-output [-r] [ACTION_ID]"
    echo "Print the output of action."
    echo ""
    echo "  -r    raw output, include ansi escape sequences"
    echo ""
    echo "RRH $RRH_VER"
    exit 8
}

RAW_OUTPUT=0
while getopts ':rh' OPT; do
    case $OPT in
        r) RAW_OUTPUT=1;;
        h) help;;
        :) PrintAndHelp "Option -$OPTARG requires an argument";;
        ?) PrintAndHelp "Unknown option -$OPTARG";;
    esac
done
shift $(($OPTIND - 1))

if [ $# -eq 0 ]; then
    ACTION_ID="$(cat $RRH_VAR/last)"
    if [ ! $? -eq 0 ]; then
        echo "read last action id failed!"
        exit 9
    fi
else
    ACTION_ID="$1"
fi

if [ ! -d "$RRH_VAR/action/$ACTION_ID" ]; then
    echo "action(id $ACTION_ID) not exists!"
    exit 10
fi

if [ $RAW_OUTPUT -eq 0 ]; then
    cat "$RRH_VAR/action/$ACTION_ID/cmd_output" |
        sed "s/$ESC[([]?\?[0-9;]*[a-zA-Z]//g" |   # Remove ansi escape codes
        sed "s/$CTRL_G/\n/g" |                    # Remove ^G
        sed "s/$CTRL_M/\n/g" |                    # Replace ^M with \n, this
                                                  # will create empty lines
        sed '/^$/d'                               # Remove empty lines
else
    cat "$RRH_VAR/action/$ACTION_ID/cmd_output"
fi
echo "exit code: $(cat $RRH_VAR/action/$ACTION_ID/exit_code)"

exit 0
